{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://gem-puzzle/./src/const.js","webpack://gem-puzzle/./src/utils/render.js","webpack://gem-puzzle/./src/view/abstract-view.js","webpack://gem-puzzle/./src/view/header-view.js","webpack://gem-puzzle/./src/view/new-game-btn-view.js","webpack://gem-puzzle/./src/view/size-selector-view.js","webpack://gem-puzzle/./src/view/save-btn-view.js","webpack://gem-puzzle/./src/view/load-btn-view.js","webpack://gem-puzzle/./src/view/result-btn-view.js","webpack://gem-puzzle/./src/view/sound-btn-view.js","webpack://gem-puzzle/./src/view/moves-counter-view.js","webpack://gem-puzzle/./src/utils/common.js","webpack://gem-puzzle/./src/view/timer-view.js","webpack://gem-puzzle/./src/presenter/header-presenter.js","webpack://gem-puzzle/./src/view/popup-view.js","webpack://gem-puzzle/./src/view/win-message-view.js","webpack://gem-puzzle/./src/view/results-view.js","webpack://gem-puzzle/./src/presenter/popup-presenter.js","webpack://gem-puzzle/./src/view/board-view.js","webpack://gem-puzzle/./src/view/board-cell-view.js","webpack://gem-puzzle/./src/view/board-tile-view.js","webpack://gem-puzzle/./src/view/sound-view.js","webpack://gem-puzzle/./src/utils/game.js","webpack://gem-puzzle/./src/presenter/game-presenter.js","webpack://gem-puzzle/./src/model/abstract-observable.js","webpack://gem-puzzle/./src/model/board-size-model.js","webpack://gem-puzzle/./src/model/moves-counter-model.js","webpack://gem-puzzle/./src/model/timer-model.js","webpack://gem-puzzle/./src/model/sound-model.js","webpack://gem-puzzle/./src/index.js"],"sourcesContent":["export const RenderPosition = {\n  BEFOREBEGIN: 'beforebegin',\n  AFTERBEGIN: 'afterbegin',\n  BEFOREEND: 'beforeend',\n  AFTEREND: 'afterend',\n};\n\nexport const SAVE_KEY = 'rz0r-save';\n\nexport const RESULTS_KEY = 'rz0r-results';\n","import { RenderPosition } from '../const.js';\nimport AbstractView from '../view/abstract-view.js';\n\nexport const render = (\n  container,\n  element,\n  place = RenderPosition.BEFOREEND\n) => {\n  const parent =\n    container instanceof AbstractView ? container.element : container;\n  const child = element instanceof AbstractView ? element.element : element;\n\n  switch (place) {\n    case RenderPosition.BEFOREBEGIN:\n      parent.before(child);\n      break;\n    case RenderPosition.AFTERBEGIN:\n      parent.prepend(child);\n      break;\n    case RenderPosition.BEFOREEND:\n      parent.append(child);\n      break;\n    case RenderPosition.AFTEREND:\n      parent.after(child);\n      break;\n  }\n};\n\nexport const replace = (newElement, oldElement) => {\n  if (newElement === null || oldElement === null) {\n    throw new Error(\"Can't replace unexisting elements\");\n  }\n\n  const newChild =\n    newElement instanceof AbstractView ? newElement.element : newElement;\n  const oldChild =\n    oldElement instanceof AbstractView ? oldElement.element : oldElement;\n\n  const parent = oldChild.parentElement;\n\n  if (parent === null) {\n    throw new Error(\"Parent element doesn't exist\");\n  }\n\n  parent.replaceChild(newChild, oldChild);\n};\n\nexport const createElement = (template) => {\n  const newElement = document.createElement('div');\n  newElement.innerHTML = template;\n  return newElement.firstElementChild;\n};\n\nexport const remove = (component) => {\n  if (component === null) {\n    return;\n  }\n\n  if (!(component instanceof AbstractView)) {\n    throw new Error('Can remove only components');\n  }\n\n  component.element.remove();\n  component.removeElement();\n};\n","import { createElement } from '../utils/render.js';\n\nclass AbstractView {\n  #element = null;\n  _callback = {};\n\n  constructor() {\n    if (new.target === AbstractView) {\n      throw new Error(\"Can't instantiate AbstractView, only concrete one.\");\n    }\n  }\n\n  get element() {\n    if (!this.#element) {\n      this.#element = createElement(this.template);\n    }\n\n    return this.#element;\n  }\n\n  get template() {\n    throw new Error('Abstract method not implemented: get template');\n  }\n\n  removeElement() {\n    this.#element = null;\n  }\n}\n\nexport default AbstractView;\n","import AbstractView from './abstract-view.js';\n\nconst createHeaderTemplate = () =>\n  `<header class=\"header\">\n\t\t<div class=\"header__top\"></div>\n\t\t<div class=\"header__bottom\"></div>\n\t</header>`;\n\nclass HeaderView extends AbstractView {\n  get template() {\n    return createHeaderTemplate();\n  }\n\n  getHeaderTopElement = () => {\n    return this.element.querySelector('.header__top');\n  };\n\n  getHeaderBottomElement = () => {\n    return this.element.querySelector('.header__bottom');\n  };\n}\n\nexport default HeaderView;\n","import AbstractView from './abstract-view.js';\n\nconst createNewGameTemplate = () =>\n  `<button class=\"header__new-game-btn btn\">New Game</button>`;\n\nclass NewGameBtnView extends AbstractView {\n  get template() {\n    return createNewGameTemplate();\n  }\n\n  setNewGameBtnClickHandler = (callback) => {\n    this._callback.btnClick = callback;\n    this.element.addEventListener('click', this.#btnClick);\n  };\n\n  #btnClick = (evt) => {\n    this._callback.btnClick(evt);\n  };\n}\n\nexport default NewGameBtnView;\n","import AbstractView from './abstract-view.js';\n\nconst createSizeSelectorTemplate = () =>\n  `<select class=\"header__size size\">\n\t\t<option value=\"3\">3x3</option>\n\t\t<option value=\"4\">4x4</option>\n\t\t<option value=\"5\">5x5</option>\n\t\t<option value=\"6\">6x6</option>\n\t\t<option value=\"7\">7x7</option>\n\t\t<option value=\"8\">8x8</option>\n\t</select>`;\n\nclass SizeSelectorView extends AbstractView {\n  constructor(value) {\n    super();\n    this.setSelectorValue(value);\n  }\n\n  get template() {\n    return createSizeSelectorTemplate();\n  }\n\n  setSelectorValue = (value) => {\n    this.element.value = value;\n  };\n\n  setSelectorChangeHandler = (callback) => {\n    this._callback.selectorChange = callback;\n    this.element.addEventListener('change', this.#selectorChangeHandler);\n  };\n\n  #selectorChangeHandler = (evt) => {\n    const value = evt.currentTarget.value;\n    this._callback.selectorChange(value);\n  };\n}\n\nexport default SizeSelectorView;\n","import AbstractView from './abstract-view.js';\n\nconst createSaveBtnTemplate = () =>\n  `<button class=\"header__save-btn btn\">Save</button>`;\n\nclass SaveBtnView extends AbstractView {\n  get template() {\n    return createSaveBtnTemplate();\n  }\n\n  setSaveBtnClickHandler = (callback) => {\n    this._callback.btnClick = callback;\n    this.element.addEventListener('click', this.#btnClick);\n  };\n\n  #btnClick = (evt) => {\n    this._callback.btnClick(evt);\n  };\n}\n\nexport default SaveBtnView;\n","import AbstractView from './abstract-view.js';\n\nconst createLoadBtnTemplate = () =>\n  `<button class=\"header__load-btn btn\">Load</button>`;\n\nclass LoadBtnView extends AbstractView {\n  get template() {\n    return createLoadBtnTemplate();\n  }\n\n  setLoadBtnClickHandler = (callback) => {\n    this._callback.btnClick = callback;\n    this.element.addEventListener('click', this.#btnClick);\n  };\n\n  #btnClick = (evt) => {\n    this._callback.btnClick(evt);\n  };\n}\n\nexport default LoadBtnView;\n","import AbstractView from './abstract-view.js';\n\nconst createResultBtnTemplate = () =>\n  `<button class=\"header__result-btn btn\">Results</button>`;\n\nclass ResultBtnView extends AbstractView {\n  get template() {\n    return createResultBtnTemplate();\n  }\n\n  setResultBtnClickHandler = (callback) => {\n    this._callback.btnClick = callback;\n    this.element.addEventListener('click', this.#btnClick);\n  };\n\n  #btnClick = (evt) => {\n    this._callback.btnClick(evt);\n  };\n}\n\nexport default ResultBtnView;\n","import AbstractView from './abstract-view.js';\n\nconst createVolumeIconTemplate = () =>\n  `<svg height=\"100%\" version=\"1.1\" viewBox=\"0 0 36 36\" width=\"100%\">\n\t\t<defs>\n\t\t\t<clipPath>\n\t\t\t\t<path d=\"m 14.35,-0.14 -5.86,5.86 20.73,20.78 5.86,-5.91 z\"></path>\n\t\t\t\t<path d=\"M 7.07,6.87 -1.11,15.33 19.61,36.11 27.80,27.60 z\"></path>\n\t\t\t\t<path d=\"M 9.09,5.20 6.47,7.88 26.82,28.77 29.66,25.99 z\" transform=\"translate(0, 0)\"></path>\n\t\t\t</clipPath>\n\t\t\t<clipPath>\n\t\t\t\t<path d=\"m -11.45,-15.55 -4.44,4.51 20.45,20.94 4.55,-4.66 z\" transform=\"translate(0, 0)\"></path>\n\t\t\t</clipPath>\n\t\t</defs>\n\t\t<path\n\t\t\td=\"M8,21 L12,21 L17,26 L17,10 L12,15 L8,15 L8,21 Z M19,14 L19,22 C20.48,21.32 21.5,19.77 21.5,18 C21.5,16.26 20.48,14.74 19,14 ZM19,11.29 C21.89,12.15 24,14.83 24,18 C24,21.17 21.89,23.85 19,24.71 L19,26.77 C23.01,25.86 26,22.28 26,18 C26,13.72 23.01,10.14 19,9.23 L19,11.29 Z\">\n\t\t</path>\n\t</svg>`;\n\nconst createVolumeMuteIconTemplate = () =>\n  `<svg height=\"100%\" version=\"1.1\" viewBox=\"0 0 36 36\" width=\"100%\">\n\t\t<path\n\t\t\td=\"m 21.48,17.98 c 0,-1.77 -1.02,-3.29 -2.5,-4.03 v 2.21 l 2.45,2.45 c .03,-0.2 .05,-0.41 .05,-0.63 z m 2.5,0 c 0,.94 -0.2,1.82 -0.54,2.64 l 1.51,1.51 c .66,-1.24 1.03,-2.65 1.03,-4.15 0,-4.28 -2.99,-7.86 -7,-8.76 v 2.05 c 2.89,.86 5,3.54 5,6.71 z M 9.25,8.98 l -1.27,1.26 4.72,4.73 H 7.98 v 6 H 11.98 l 5,5 v -6.73 l 4.25,4.25 c -0.67,.52 -1.42,.93 -2.25,1.18 v 2.06 c 1.38,-0.31 2.63,-0.95 3.69,-1.81 l 2.04,2.05 1.27,-1.27 -9,-9 -7.72,-7.72 z m 7.72,.99 -2.09,2.08 2.09,2.09 V 9.98 z\">\n\t\t</path>\n\t</svg>`;\n\nconst createSoundBtnTemplate = (isSoundEnabled) =>\n  `<button class=\"header__sound-btn btn\">\n\t\t${isSoundEnabled ? createVolumeIconTemplate() : createVolumeMuteIconTemplate()}\n\t</button>`;\n\nclass SoundBtnView extends AbstractView {\n  #isSoundEnabled = false;\n\n  constructor(isSoundEnabled) {\n    super();\n    this.#isSoundEnabled = isSoundEnabled;\n  }\n\n  get template() {\n    return createSoundBtnTemplate(this.#isSoundEnabled);\n  }\n\n  setSoundClickHandler = (callback) => {\n    this._callback.btnClick = callback;\n    this.element.addEventListener('click', this.#btnClick);\n  };\n\n  #btnClick = (evt) => {\n    this._callback.btnClick(evt);\n  };\n}\n\nexport default SoundBtnView;\n","import AbstractView from './abstract-view.js';\n\nconst createMoveCounterTemplate = (value) =>\n  `<div class=\"header__moves moves\">\n    <div class=\"moves__title\">Moves:</div>\n    <div class=\"moves__count\">${value}</div>\n  </div>`;\n\nclass MoveCounterView extends AbstractView {\n  #value = 0;\n\n  constructor(value) {\n    super();\n    this.#value = value;\n  }\n\n  get template() {\n    return createMoveCounterTemplate(this.#value);\n  }\n}\n\nexport default MoveCounterView;\n","export const compareObj = (obj1, obj2) => {\n  const keys1 = Object.keys(obj1);\n  const keys2 = Object.keys(obj2);\n\n  if (keys1.length !== keys2.length) return false;\n\n  for (const key of keys1) {\n    if (obj1[key] !== obj2[key]) return false;\n  }\n\n  return true;\n};\n\nexport const formatTime = (number) => {\n  const minutes = Math.floor((number / 60) % 60)\n    .toString()\n    .padStart(2, 0);\n\n  const seconds = Math.floor(number % 60)\n    .toString()\n    .padStart(2, 0);\n\n  return `${minutes}:${seconds}`;\n};\n","import AbstractView from './abstract-view.js';\nimport { formatTime } from '../utils/common.js';\n\nconst createTimerTemplate = (value) =>\n  `<div class=\"header__time time\">\n\t\t<div class=\"time__title\">Time:</div>\n\t\t<div class=\"time__value\">${formatTime(value)}</div>\n\t</div>`;\n\nclass TimerView extends AbstractView {\n  #value = 0;\n\n  constructor(value) {\n    super();\n    this.#value = value;\n  }\n\n  get template() {\n    return createTimerTemplate(this.#value);\n  }\n}\n\nexport default TimerView;\n","import HeaderView from '../view/header-view.js';\nimport NewGameBtnView from '../view/new-game-btn-view.js';\nimport SizeSelectorView from '../view/size-selector-view.js';\nimport SaveBtnView from '../view/save-btn-view.js';\nimport LoadBtnView from '../view/load-btn-view.js';\nimport ResultBtnView from '../view/result-btn-view.js';\nimport SoundBtnView from '../view/sound-btn-view.js';\nimport MoveCounterView from '../view/moves-counter-view.js';\nimport TimerView from '../view/timer-view.js';\nimport { remove, render, replace } from '../utils/render.js';\nimport { RenderPosition } from '../const.js';\n\nclass HeaderPresenter {\n  #headerContainer = null;\n  #boardSizeModel = null;\n  #movesCounterModel = null;\n  #timerModel = null;\n  #soundModel = null;\n  #headerComponent = null;\n  #newGameBtnComponent = null;\n  #sizeSelectorComponent = null;\n  #saveBtnComponent = null;\n  #loadBtnComponent = null;\n  #resultBtnComponent = null;\n  #soundBtnComponent = null;\n  #movesCounterComponent = null;\n  #timerComponent = null;\n\n  #newGameHandler = null;\n  #saveGameHandler = null;\n  #loadGameHandler = null;\n  #showResultsHandler = null;\n\n  constructor(\n    headerContainer,\n    boardSizeModel,\n    movesCounterModel,\n    timerModel,\n    soundModel,\n    newGameHandler,\n    saveGameHandler,\n    loadGameHandler,\n    showResultsHandler\n  ) {\n    this.#headerContainer = headerContainer;\n    this.#boardSizeModel = boardSizeModel;\n    this.#movesCounterModel = movesCounterModel;\n    this.#timerModel = timerModel;\n    this.#soundModel = soundModel;\n    this.#newGameHandler = newGameHandler;\n    this.#saveGameHandler = saveGameHandler;\n    this.#loadGameHandler = loadGameHandler;\n    this.#showResultsHandler = showResultsHandler;\n  }\n\n  init = () => {\n    this.#render();\n    this.#movesCounterModel.addObserver(this.#handleMoveCounterEvent);\n    this.#timerModel.addObserver(this.#handleTimerEvent);\n    this.#soundModel.addObserver(this.#handleSoundEvent);\n    this.#boardSizeModel.addObserver(this.#handleBoardSizeChangeEvent);\n  };\n\n  #render = () => {\n    this.#headerComponent = new HeaderView();\n    render(this.#headerContainer, this.#headerComponent);\n    this.#renderMoveCounter();\n    this.#renderTimer();\n    this.#renderNewGameBtn();\n    this.#renderSizeSelector();\n    this.#renderSaveBtn();\n    this.#renderLoadBtn();\n    this.#renderResultBtn();\n    this.#renderSoundBtn();\n  };\n\n  #renderNewGameBtn = () => {\n    this.#newGameBtnComponent = new NewGameBtnView();\n    this.#newGameBtnComponent.setNewGameBtnClickHandler(this.#newGameHandler);\n    render(\n      this.#headerComponent.getHeaderTopElement(),\n      this.#newGameBtnComponent,\n      RenderPosition.AFTERBEGIN\n    );\n  };\n\n  #renderSizeSelector = () => {\n    this.#sizeSelectorComponent = new SizeSelectorView(\n      this.#boardSizeModel.size\n    );\n\n    this.#sizeSelectorComponent.setSelectorChangeHandler(\n      (value) => (this.#boardSizeModel.size = value)\n    );\n\n    render(\n      this.#headerComponent.getHeaderTopElement(),\n      this.#sizeSelectorComponent\n    );\n  };\n\n  #renderSaveBtn = () => {\n    this.#saveBtnComponent = new SaveBtnView();\n    this.#saveBtnComponent.setSaveBtnClickHandler(this.#saveGameHandler);\n    render(this.#headerComponent.getHeaderTopElement(), this.#saveBtnComponent);\n  };\n\n  #renderLoadBtn = () => {\n    this.#loadBtnComponent = new LoadBtnView();\n    this.#loadBtnComponent.setLoadBtnClickHandler(this.#loadGameHandler);\n    render(this.#headerComponent.getHeaderTopElement(), this.#loadBtnComponent);\n  };\n\n  #renderResultBtn = () => {\n    this.#resultBtnComponent = new ResultBtnView();\n    this.#resultBtnComponent.setResultBtnClickHandler(this.#showResultsHandler);\n    render(\n      this.#headerComponent.getHeaderTopElement(),\n      this.#resultBtnComponent\n    );\n  };\n\n  #renderSoundBtn = () => {\n    const prevSoundBtnComponent = this.#soundBtnComponent;\n    this.#soundBtnComponent = new SoundBtnView(this.#soundModel.isSoundEnabled);\n    this.#soundBtnComponent.setSoundClickHandler(this.#toggleSound);\n\n    if (!prevSoundBtnComponent) {\n      render(\n        this.#headerComponent.getHeaderTopElement(),\n        this.#soundBtnComponent\n      );\n      return;\n    }\n\n    replace(this.#soundBtnComponent, prevSoundBtnComponent);\n    remove(prevSoundBtnComponent);\n  };\n\n  #renderMoveCounter = () => {\n    const prevMoveCounterComponent = this.#movesCounterComponent;\n    this.#movesCounterComponent = new MoveCounterView(\n      this.#movesCounterModel.moves\n    );\n\n    if (!prevMoveCounterComponent) {\n      render(\n        this.#headerComponent.getHeaderBottomElement(),\n        this.#movesCounterComponent,\n        RenderPosition.AFTERBEGIN\n      );\n      return;\n    }\n\n    replace(this.#movesCounterComponent, prevMoveCounterComponent);\n    remove(prevMoveCounterComponent);\n  };\n\n  #renderTimer = () => {\n    const prevTimerComponent = this.#timerComponent;\n    this.#timerComponent = new TimerView(this.#timerModel.time);\n\n    if (!prevTimerComponent) {\n      render(\n        this.#headerComponent.getHeaderBottomElement(),\n        this.#timerComponent\n      );\n      return;\n    }\n\n    replace(this.#timerComponent, prevTimerComponent);\n    remove(prevTimerComponent);\n  };\n\n  #handleMoveCounterEvent = () => {\n    this.#renderMoveCounter();\n  };\n\n  #handleTimerEvent = () => {\n    this.#renderTimer();\n  };\n\n  #handleSoundEvent = () => {\n    this.#renderSoundBtn();\n  };\n\n  #toggleSound = () => {\n    this.#soundModel.isSoundEnabled = !this.#soundModel.isSoundEnabled;\n  };\n\n  #handleBoardSizeChangeEvent = (value) => {\n    this.#sizeSelectorComponent.setSelectorValue(value);\n  };\n}\n\nexport default HeaderPresenter;\n","import AbstractView from './abstract-view.js';\n\nconst createPopupViewTemplate = () =>\n  `<div class=\"popup\">\n\t\t\t<div class=\"popup__overlay\"></div>\n\t\t\t<div class=\"popup__content\">\n\t\t\t\t<div class=\"popup__wrapper\"></div>\n\t\t\t\t<button class=\"popup__close-btn\"></button>\n\t\t\t</div>\n\t\t</div>`;\n\nclass PopupView extends AbstractView {\n  #isActive = false;\n\n  constructor() {\n    super();\n    this.#setPopupClickHandler();\n    this.#setPopupTransitionEndHandler();\n  }\n\n  get template() {\n    return createPopupViewTemplate();\n  }\n\n  getContentContainer = () => {\n    return this.element.querySelector('.popup__wrapper');\n  };\n\n  showPopup = () => {\n    document.documentElement.classList.add('popup-active');\n    this.#isActive = true;\n  };\n\n  #setPopupClickHandler = () => {\n    this.element.addEventListener('click', this.#popupClickHandler);\n  };\n\n  #setPopupTransitionEndHandler = () => {\n    this.element.addEventListener(\n      'transitionend',\n      this.#popupTransitionEndHandler\n    );\n  };\n\n  #popupClickHandler = (evt) => {\n    if (\n      evt.target.closest('.popup__overlay') ||\n      evt.target.closest('.popup__close-btn')\n    ) {\n      this.#closePopup();\n      return;\n    }\n  };\n\n  #popupTransitionEndHandler = (evt) => {\n    if (this.#isActive) return;\n    if (!evt.target.classList.contains('popup__overlay')) return;\n    if (this.getContentContainer().firstElementChild) {\n      this.getContentContainer().firstElementChild.remove();\n    }\n  };\n\n  #closePopup = () => {\n    document.documentElement.classList.remove('popup-active');\n    this.#isActive = false;\n  };\n}\n\nexport default PopupView;\n","import { formatTime } from '../utils/common.js';\nimport AbstractView from './abstract-view.js';\n\nconst getWinMessage = (moves, time) =>\n  `Hooray! You solved the puzzle in ${formatTime(\n    time\n  )} and ${moves}&nbsp;moves!`;\n\nconst createPopupViewTemplate = (message) =>\n  `<div class=\"win-message\">${message}</div>`;\n\nclass WinMessageView extends AbstractView {\n  #message = null;\n\n  constructor(moves, time) {\n    super();\n    this.#message = getWinMessage(moves, time);\n  }\n\n  get template() {\n    return createPopupViewTemplate(this.#message);\n  }\n}\n\nexport default WinMessageView;\n","import { formatTime } from '../utils/common.js';\nimport AbstractView from './abstract-view.js';\n\nconst createTableRowTemplate = (number, time, moves) =>\n  `<div class=\"table-results__row\">\n\t\t<div class=\"table-results__number\">${number}</div>\n\t\t<div class=\"table-results__time\">Time: <span>${formatTime(time)}</span></div>\n\t\t<div class=\"table-results__moves\">Moves: <span>${moves}</span></div>\n\t</div>`;\n\nconst createResultTemplate = (boardSize, resultsData) => {\n  const tableRows = resultsData\n    .map(({ time, moves }, i) => createTableRowTemplate(i + 1, time, moves))\n    .join('');\n\n  let message = '';\n\n  if (resultsData.length === 0) {\n    message = `There are no results for the ${boardSize}x${boardSize} field yet`;\n  } else {\n    message = `Best results for the ${boardSize}x${boardSize} field`;\n  }\n\n  return `<div class=\"results\">\n      <h2 class=\"results__title\">Results</h2>\n      <h3 class=\"results__subtitle\">${message}</h3>\n      <div class=\"results__table table-results\">${tableRows}</div>\n    </div>`;\n};\n\nclass ResultsView extends AbstractView {\n  #boardSize = null;\n  #resultsData = null;\n\n  constructor(boardSize, resultsData) {\n    super();\n    this.#boardSize = boardSize;\n    this.#resultsData = resultsData;\n  }\n\n  get template() {\n    return createResultTemplate(this.#boardSize, this.#resultsData);\n  }\n}\n\nexport default ResultsView;\n","import PopupView from '../view/popup-view.js';\nimport WinMessageView from '../view/win-message-view.js';\nimport ResultsView from '../view/results-view.js';\nimport { remove, render } from '../utils/render.js';\n\nclass PopupPresenter {\n  #popupContainer = null;\n  #popupComponent = null;\n  #winMessageComponent = null;\n  #resultsComponent = null;\n\n  constructor(popupContainer) {\n    this.#popupContainer = popupContainer;\n  }\n\n  renderPopup() {\n    if (!this.#popupComponent) {\n      this.#popupComponent = new PopupView();\n      render(this.#popupContainer, this.#popupComponent);\n    }\n  }\n\n  showWinMessage = (moves, time) => {\n    this.renderPopup();\n    this.#winMessageComponent = new WinMessageView(moves, time);\n    render(\n      this.#popupComponent.getContentContainer(),\n      this.#winMessageComponent\n    );\n    this.#popupComponent.showPopup();\n  };\n\n  showResults = (boardSize, resultsData) => {\n    this.renderPopup();\n    this.#resultsComponent = new ResultsView(boardSize, resultsData);\n    render(this.#popupComponent.getContentContainer(), this.#resultsComponent);\n    this.#popupComponent.showPopup();\n  };\n}\n\nexport default PopupPresenter;\n","import AbstractView from './abstract-view.js';\n\nconst createBoardTemplate = () =>\n  `<div class=\"board\">\n\t</div>`;\n\nclass BoardView extends AbstractView {\n  #size = 3;\n  #cellSize = 20;\n  #fontSize = 7.5;\n  #gap = 2;\n\n  constructor(size = 3) {\n    super();\n    this.#size = size;\n    this.size = this.#size;\n  }\n\n  get template() {\n    return createBoardTemplate();\n  }\n\n  set size(value) {\n    this.#size = value;\n    this.element.style.setProperty('--grid-size', value);\n    this.#setCellSize();\n    this.#setFontSize();\n    this.#setGap();\n  }\n\n  #setCellSize = () => {\n    this.#cellSize = 76 / this.#size;\n    this.element.style.setProperty('--cell-size', `${this.#cellSize}vmin`);\n  };\n\n  #setFontSize = () => {\n    this.#fontSize = 22.5 / this.#size;\n    this.element.style.setProperty('--font-size', `${this.#fontSize}vmin`);\n  };\n\n  #setGap = () => {\n    this.#gap = 6 / this.#size;\n    this.element.style.setProperty('--cell-gap', `${this.#gap}vmin`);\n  };\n}\n\nexport default BoardView;\n","import AbstractView from './abstract-view.js';\n\nconst createBoardCellTemplate = () => `<div class=\"board__cell\"></div>`;\n\nclass BoardCellView extends AbstractView {\n  constructor() {\n    super();\n    this.#setCellDragOverHandler();\n  }\n\n  get template() {\n    return createBoardCellTemplate();\n  }\n\n  #setCellDragOverHandler = () => {\n    this.element.addEventListener('dragover', this.#cellDragOverHandler);\n  };\n\n  #cellDragOverHandler = (evt) => {\n    evt.preventDefault();\n  };\n\n  setCellDropHandler = (callback) => {\n    this._callback.cellDrop = callback;\n    this.element.addEventListener('drop', this.#cellDropHandler);\n  };\n\n  #cellDropHandler = (evt) => {\n    if (!evt.dataTransfer.getData('tile')) return;\n    const data = JSON.parse(evt.dataTransfer.getData('tile'));\n    this._callback.cellDrop(data);\n  };\n}\n\nexport default BoardCellView;\n","import AbstractView from './abstract-view.js';\n\nconst createBoardTileTemplate = (number) =>\n  `<div class=\"board__tile\" draggable=\"true\">\n    ${number}\n\t</div>`;\n\nclass BoardTileView extends AbstractView {\n  #number;\n  #x;\n  #y;\n\n  constructor(number, x, y) {\n    super();\n    this.#number = number;\n    this.x = x;\n    this.y = y;\n\n    this.#setTileDragStartHandler();\n  }\n\n  get template() {\n    return createBoardTileTemplate(this.#number);\n  }\n\n  get number() {\n    return this.#number;\n  }\n\n  set x(value) {\n    this.#x = value;\n    this.element.style.setProperty('--x', value);\n  }\n\n  set y(value) {\n    this.#y = value;\n    this.element.style.setProperty('--y', value);\n  }\n\n  changePosition = ({ x, y }) => {\n    this.x = x;\n    this.y = y;\n  };\n\n  setTileClickHandler = (callback) => {\n    this._callback.tileClick = callback;\n    this.element.addEventListener('click', this.#tileClickHandler);\n  };\n\n  #tileClickHandler = (evt) => {\n    this._callback.tileClick({\n      number: this.#number,\n      x: this.#x,\n      y: this.#y,\n    });\n  };\n\n  #setTileDragStartHandler = () => {\n    this.element.addEventListener('dragstart', this.#tileDragStartHandler);\n  };\n\n  #tileDragStartHandler = (evt) => {\n    const data = JSON.stringify({\n      number: this.#number,\n      x: this.#x,\n      y: this.#y,\n    });\n\n    evt.dataTransfer.setData('tile', data);\n  };\n}\n\nexport default BoardTileView;\n","import AbstractView from './abstract-view.js';\n\nconst createSoundViewTemplate = () =>\n  `<div>\n\t\t<audio data-move-sound src=\"./assets//sound/move-tile.mp3\"></audio>\n\t\t<audio data-victory-sound src=\"./assets//sound/victory.mp3\"></audio>\n\t</div>`;\n\nclass SoundView extends AbstractView {\n  #moveSound = null;\n  #victorySound = null;\n\n  constructor() {\n    super();\n    this.#moveSound = this.element.querySelector('audio[data-move-sound]');\n    this.#victorySound = this.element.querySelector(\n      'audio[data-victory-sound]'\n    );\n    this.#victorySound.volume = 0.3;\n  }\n\n  get template() {\n    return createSoundViewTemplate();\n  }\n\n  playMoveSound = () => {\n    this.#moveSound.currentTime = 0;\n    this.#moveSound.play();\n  };\n\n  playVictorySound = () => {\n    this.#victorySound.currentTime = 0;\n    this.#victorySound.play();\n  };\n}\n\nexport default SoundView;\n","import { SAVE_KEY, RESULTS_KEY } from '../const.js';\n\nexport const createGameMatrix = (size) => {\n  const arr = [];\n  let number = 0;\n  for (let y = 0; y < size; y++) {\n    for (let x = 0; x < size; x++) {\n      number++;\n      arr.push({ number, x, y });\n    }\n  }\n\n  arr[arr.length - 1].number = 0;\n\n  return arr;\n};\n\nexport const shuffleGameMatrix = (array) => {\n  const copyArr = JSON.parse(JSON.stringify(array));\n\n  for (let i = 0; i < array.length ** 3; i++) {\n    randomMove(copyArr);\n  }\n\n  return copyArr;\n};\n\nexport const canIMoveTile = (pos1, pos2) => {\n  const diffX = Math.abs(pos1.x - pos2.x);\n  const diffY = Math.abs(pos1.y - pos2.y);\n\n  return (diffX === 1 || diffY === 1) && (pos1.x === pos2.x || pos1.y === pos2.y);\n};\n\nexport const findEmptyCell = (array) => {\n  const emptyCell = array.find(({ number }) => number === 0);\n  return emptyCell;\n};\n\nconst findValidMoves = (pos, size) => {\n  const positions = [];\n\n  for (let y = 0; y < size; y++) {\n    for (let x = 0; x < size; x++) {\n      if (canIMoveTile({ x, y }, pos)) {\n        positions.push({ x, y });\n      }\n    }\n  }\n\n  return positions;\n};\n\nconst randomMove = (array) => {\n  const emptyCell = findEmptyCell(array);\n  const size = Math.sqrt(array.length);\n\n  const emptyCellPos = {\n    x: emptyCell.x,\n    y: emptyCell.y,\n  };\n\n  const validMovePositions = findValidMoves(emptyCellPos, size);\n  const randomInd = Math.floor(Math.random() * validMovePositions.length);\n\n  swapTile(validMovePositions[randomInd], emptyCellPos, array);\n};\n\nexport const swapTile = (pos1, pos2, array) => {\n  const tile1 = array.find((it) => it.x === pos1.x && it.y === pos1.y);\n  const tile2 = array.find((it) => it.x === pos2.x && it.y === pos2.y);\n\n  const tempPos = { x: tile1.x, y: tile1.y };\n\n  tile1.x = tile2.x;\n  tile1.y = tile2.y;\n\n  tile2.x = tempPos.x;\n  tile2.y = tempPos.y;\n};\n\nexport const saveDataGame = (gameState, boardSize, time, moves) => {\n  const savingData = {\n    gameState,\n    boardSize,\n    time,\n    moves,\n  };\n\n  localStorage.setItem(SAVE_KEY, JSON.stringify(savingData));\n};\n\nexport const loadDataGame = () => JSON.parse(localStorage.getItem(SAVE_KEY) || 'null');\n\nexport const filterAndSortResults = (currentBoardSize, resultsData) => {\n  const filteredData = resultsData\n    .filter((it) => Number(it.boardSize) === currentBoardSize)\n    .sort((a, b) => {\n      if (a.time === b.time) {\n        return a.moves - b.moves;\n      }\n      return a.time - b.time;\n    })\n    .slice(0, 10);\n\n  return filteredData;\n};\n\nexport const loadResults = () => JSON.parse(localStorage.getItem(RESULTS_KEY) || '[]');\n\nexport const saveResults = (boardSize, time, moves) => {\n  let resultsData = [];\n  const loadedResultsData = loadResults();\n  if (loadedResultsData.length > 0) {\n    resultsData = [...loadedResultsData];\n  }\n\n  resultsData.push({ boardSize, time, moves });\n\n  localStorage.setItem(RESULTS_KEY, JSON.stringify(resultsData));\n};\n","import HeaderPresenter from './header-presenter.js';\nimport PopupPresenter from './popup-presenter.js';\nimport BoardView from '../view/board-view.js';\nimport BoardCellView from '../view/board-cell-view.js';\nimport BoardTileView from '../view/board-tile-view.js';\nimport SoundView from '../view/sound-view.js';\nimport {\n  createGameMatrix,\n  shuffleGameMatrix,\n  swapTile,\n  canIMoveTile,\n  findEmptyCell,\n  saveDataGame,\n  loadDataGame,\n  saveResults,\n  loadResults,\n  filterAndSortResults,\n} from '../utils/game.js';\nimport { remove, render } from '../utils/render.js';\n\nclass GamePresenter {\n  #gameContainer = null;\n  #headerPresenter = null;\n\n  #boardComponent = null;\n  #boardSizeModel = null;\n\n  #gameState = null;\n  #tiles = [];\n  #cells = [];\n  #isGameLoading = false;\n\n  #soundModel = null;\n  #soundComponent = null;\n\n  #winCombination = null;\n\n  #movesCounterModel = null;\n  #timerModel = null;\n\n  #moves = 0;\n  #isGameEnd = true;\n\n  #popupPresenter = null;\n\n  constructor(gameContainer, boardSizeModel, movesCounterModel, timerModel, soundModel) {\n    this.#gameContainer = gameContainer;\n    this.#boardSizeModel = boardSizeModel;\n    this.#movesCounterModel = movesCounterModel;\n    this.#timerModel = timerModel;\n    this.#soundModel = soundModel;\n  }\n\n  init = () => {\n    this.#moves = this.#movesCounterModel.moves;\n    this.#renderHeader();\n    this.#initGameState();\n    this.#renderBoard();\n    this.#renderTiles();\n    this.#renderSound();\n    this.#popupPresenter = new PopupPresenter(this.#gameContainer);\n\n    this.#boardSizeModel.addObserver(this.#handleBoardSizeEvent);\n  };\n\n  #initGameState = () => {\n    let tempState = createGameMatrix(this.#boardSizeModel.size);\n    this.#winCombination = tempState;\n    tempState = shuffleGameMatrix(tempState);\n\n    this.#gameState = tempState;\n  };\n\n  #newGame = () => {\n    this.#movesCounterModel.moves = 0;\n    this.#moves = 0;\n    this.#timerModel.resetTimer();\n\n    this.#removeBoard();\n    this.#removeTiles();\n\n    this.#renderBoard();\n    this.#initGameState();\n    this.#renderTiles();\n  };\n\n  #renderHeader = () => {\n    this.#headerPresenter = new HeaderPresenter(\n      this.#gameContainer,\n      this.#boardSizeModel,\n      this.#movesCounterModel,\n      this.#timerModel,\n      this.#soundModel,\n      this.#newGame,\n      this.#saveGame,\n      this.#loadGame,\n      this.#showResults,\n    );\n    this.#headerPresenter.init();\n  };\n\n  #renderBoard = () => {\n    this.#boardComponent = new BoardView(this.#boardSizeModel.size);\n    render(this.#gameContainer, this.#boardComponent);\n\n    for (let i = 0; i < this.#boardSizeModel.size ** 2; i++) {\n      const cell = new BoardCellView();\n      cell.setCellDropHandler(this.#handleTileMove);\n      this.#cells.push(cell);\n      render(this.#boardComponent, cell);\n    }\n\n    this.#timerModel.startTimer();\n  };\n\n  #removeBoard = () => {\n    remove(this.#boardComponent);\n    this.#boardComponent = null;\n    this.#cells = [];\n  };\n\n  #renderTiles = () => {\n    for (const it of this.#gameState) {\n      const { number, x, y } = it;\n      if (number === 0) continue;\n      const tile = new BoardTileView(number, x, y);\n      tile.setTileClickHandler(this.#handleTileMove);\n      render(this.#boardComponent, tile);\n      this.#tiles.push(tile);\n    }\n\n    this.#isGameEnd = false;\n  };\n\n  #removeTiles = () => {\n    for (const tiles of this.#tiles) {\n      remove(tiles);\n    }\n    this.#tiles = [];\n  };\n\n  #renderSound = () => {\n    this.#soundComponent = new SoundView();\n    render(this.#gameContainer, this.#soundComponent);\n  };\n\n  #handleTileMove = (tileData) => {\n    if (this.#isGameEnd) return;\n\n    let emptyCell = findEmptyCell(this.#gameState);\n\n    const tilePosition = { x: tileData.x, y: tileData.y };\n    const emptyCellPosition = { x: emptyCell.x, y: emptyCell.y };\n\n    if (!canIMoveTile(tilePosition, emptyCellPosition)) return;\n\n    const tileComponent = this.#tiles.find((tile) => tile.number === tileData.number);\n    tileComponent.changePosition(emptyCellPosition);\n    swapTile(tilePosition, emptyCellPosition, this.#gameState);\n    this.#moves++;\n    this.#movesCounterModel.moves = this.#moves;\n    this.#soundModel.isSoundEnabled && this.#soundComponent.playMoveSound();\n\n    if (this.#isWin()) {\n      this.#timerModel.stopTimer();\n      this.#isGameEnd = true;\n      this.#soundModel.isSoundEnabled && this.#soundComponent.playVictorySound();\n      this.#popupPresenter.showWinMessage(this.#moves, this.#timerModel.time);\n      saveResults(this.#boardSizeModel.size, this.#timerModel.time, this.#moves);\n    }\n  };\n\n  #isWin = () => JSON.stringify(this.#gameState) === JSON.stringify(this.#winCombination);\n\n  #saveGame = () => {\n    if (this.#isGameEnd) return;\n\n    saveDataGame(this.#gameState, this.#boardSizeModel.size, this.#timerModel.time, this.#moves);\n  };\n\n  #loadGame = () => {\n    const dataGame = loadDataGame();\n    if (dataGame === null) return;\n\n    this.#isGameLoading = true;\n\n    const { gameState, boardSize, time, moves } = dataGame;\n\n    this.#gameState = gameState;\n    this.#movesCounterModel.moves = moves;\n    this.#moves = moves;\n    this.#boardSizeModel.size = boardSize;\n    this.#timerModel.stopTimer();\n    this.#timerModel.time = time;\n\n    this.#removeBoard();\n    this.#removeTiles();\n\n    this.#renderBoard();\n    this.#renderTiles();\n\n    this.#winCombination = createGameMatrix(this.#boardSizeModel.size);\n\n    this.#isGameLoading = false;\n  };\n\n  #showResults = () => {\n    let resultsData = loadResults();\n    resultsData = filterAndSortResults(this.#boardSizeModel.size, resultsData);\n    this.#popupPresenter.showResults(this.#boardSizeModel.size, resultsData);\n  };\n\n  #handleBoardSizeEvent = () => {\n    if (this.#isGameLoading) return;\n    this.#newGame();\n  };\n}\n\nexport default GamePresenter;\n","class AbstractObservable {\n  #observers = new Set();\n\n  addObserver = (observer) => {\n    this.#observers.add(observer);\n  };\n\n  removeObserver = (observer) => {\n    this.#observers.delete(observer);\n  };\n\n  _notify = (payload) => {\n    this.#observers.forEach((observer) => {\n      observer(payload);\n    });\n  };\n}\n\nexport default AbstractObservable;\n","import AbstractObservable from './abstract-observable.js';\n\nclass BoardSizeModel extends AbstractObservable {\n  #size = 4;\n\n  get size() {\n    return this.#size;\n  }\n\n  set size(value) {\n    this.#size = Number(value);\n    this._notify(this.#size);\n  }\n}\n\nexport default BoardSizeModel;\n","import AbstractObservable from './abstract-observable.js';\n\nclass MovesCounterModel extends AbstractObservable {\n  #moves = 0;\n\n  get moves() {\n    return this.#moves;\n  }\n\n  set moves(value) {\n    this.#moves = value;\n    this._notify(value);\n  }\n}\n\nexport default MovesCounterModel;\n","import AbstractObservable from './abstract-observable.js';\n\nclass TimerModel extends AbstractObservable {\n  #time = 0;\n  #timerId = null;\n\n  get time() {\n    return this.#time;\n  }\n\n  set time(value) {\n    this.#time = value;\n    this._notify(value);\n  }\n\n  startTimer = () => {\n    this.#timerId = setInterval(() => {\n      this.time = this.#time + 1;\n    }, 1000);\n  };\n\n  stopTimer = () => {\n    clearInterval(this.#timerId);\n    this.#timerId = null;\n  };\n\n  resetTimer = () => {\n    this.stopTimer();\n    this.time = 0;\n  };\n}\n\nexport default TimerModel;\n","import AbstractObservable from './abstract-observable.js';\n\nclass SoundModel extends AbstractObservable {\n  #isSoundEnabled = true;\n\n  get isSoundEnabled() {\n    return this.#isSoundEnabled;\n  }\n\n  set isSoundEnabled(value) {\n    this.#isSoundEnabled = value;\n    this._notify(value);\n  }\n}\n\nexport default SoundModel;\n","import GamePresenter from './presenter/game-presenter.js';\nimport BoardSizeModel from './model/board-size-model.js';\nimport MovesCounterModel from './model/moves-counter-model.js';\nimport TimerModel from './model/timer-model.js';\nimport SoundModel from './model/sound-model.js';\nimport { createElement, render } from './utils/render.js';\nimport './scss/style.scss';\n\nconst body = document.querySelector('body');\n\nconst createRootTemplate = () => '<div id=\"root\"></div>';\nconst root = createElement(createRootTemplate);\n\nrender(body, root);\n\nconst boardSizeModel = new BoardSizeModel();\nconst moveCounterModel = new MovesCounterModel();\nconst timerModel = new TimerModel();\nconst soundModel = new SoundModel();\n\nconst game = new GamePresenter(root, boardSizeModel, moveCounterModel, timerModel, soundModel);\ngame.init();\n"],"names":["RenderPosition","SAVE_KEY","RESULTS_KEY","render","container","element","place","parent","AbstractView","child","before","prepend","append","after","replace","newElement","oldElement","Error","newChild","oldChild","parentElement","replaceChild","createElement","template","document","innerHTML","firstElementChild","remove","component","removeElement","constructor","this","querySelector","callback","_callback","btnClick","addEventListener","evt","value","super","selectorChange","currentTarget","setSelectorValue","isSoundEnabled","formatTime","number","Math","floor","toString","padStart","documentElement","classList","add","target","closest","contains","getContentContainer","moves","time","getWinMessage","boardSize","resultsData","tableRows","map","i","createTableRowTemplate","join","message","length","createResultTemplate","size","style","setProperty","preventDefault","cellDrop","dataTransfer","getData","data","JSON","parse","x","y","tileClick","stringify","setData","currentTime","play","volume","createGameMatrix","arr","push","canIMoveTile","pos1","pos2","diffX","abs","diffY","findEmptyCell","array","find","randomMove","emptyCell","sqrt","emptyCellPos","validMovePositions","pos","positions","findValidMoves","randomInd","random","swapTile","tile1","it","tile2","tempPos","loadResults","localStorage","getItem","Set","observer","delete","payload","forEach","body","root","gameContainer","boardSizeModel","movesCounterModel","timerModel","soundModel","popupContainer","renderPopup","WinMessageView","showPopup","ResultsView","PopupView","addObserver","tempState","copyArr","shuffleGameMatrix","resetTimer","headerContainer","newGameHandler","saveGameHandler","loadGameHandler","showResultsHandler","HeaderView","NewGameBtnView","setNewGameBtnClickHandler","getHeaderTopElement","SizeSelectorView","setSelectorChangeHandler","SaveBtnView","setSaveBtnClickHandler","LoadBtnView","setLoadBtnClickHandler","ResultBtnView","setResultBtnClickHandler","prevSoundBtnComponent","SoundBtnView","setSoundClickHandler","prevMoveCounterComponent","MoveCounterView","getHeaderBottomElement","prevTimerComponent","TimerView","init","BoardView","cell","BoardCellView","setCellDropHandler","startTimer","tile","BoardTileView","setTileClickHandler","tiles","SoundView","tileData","tilePosition","emptyCellPosition","changePosition","playMoveSound","stopTimer","playVictorySound","showWinMessage","loadedResultsData","setItem","saveResults","gameState","savingData","saveDataGame","dataGame","currentBoardSize","filter","Number","sort","a","b","slice","filterAndSortResults","showResults","AbstractObservable","_notify","setInterval","clearInterval"],"sourceRoot":""}